ggplot(by_fe, aes(x=math)) +
geom_density()
#correlation(상관관계)
cor(dd$write, dd$read)
scores <- dd[, c("read", "write")]
cor(scores)
ggplot(dd, aes(x=ses, fill=prog)) +
geom_bar()
ggplot(dd, aes(x=ses, fill=prog)) +
geom_bar(position = dodge)
ggplot(dd, aes(x=ses, fill=prog)) +
geom_bar(position = "dodge")
ggplot(dd, aes(x=read, y=write, color=prog)) +
geom_point()+
geom_smooth()
ggplot(dd, aes(x=read, y=write, color=prog)) +
geom_point()+
geom_smooth()
ggplot(dd, aes(x=ses, fill=prog)) +
geom_bar(position = "dodge") +
geom_wrap(~female)
ggplot(dd, aes(x=ses, fill=prog)) +
geom_bar(position = "dodge") +
facet_wrap(~female)
ggplot(dd, aes(x=awards)) +
geom_density()
ggplot(dd, aes(x=awards, fill=prog)) +
geom_density()
table(dd$awards)
summary(dd$awards)
table(dd_semo$prog)
table(dd_semi$prog)
by_se<-group_by(dd, prog) %>%
summarize(by_se, max(math))
by_se<-group_by(dd, prog)
summarize(by_se, max(math))
table(by_se)
table(by_se$prog)
ggplot(by_se, aes(x=prog, y=math, fill=prog)) +
geom_bar()
ggplot(by_se, aes(x=prog, fill=prog)) +
geom_bar()
summarize(by_se, max(math), IQR=math)
summarize(by_se, max(math))
ggplot(by_se, aes(x=prog, fill=prog)) +
geom_boxplot()
ggplot(by_se, aes(x=prog, fill=prog)) +
geom_bar()
ggplot(dd, aes(x=awards, fill=prog, IQR(math))) +
geom_density()
ggplot(by_se, aes(x=prog, fill=prog)) +
geom_boxplot()
ggplot(dd, aes(x=awards, fill=prog)) +
geom_density()
summarize(by_se, max(math), IQR(math))
ggplot(by_se, aes(x=prog, fill=prog)) +
geom_boxplot()
ggplot(by_se, aes(x=prog,y=math,fill=prog)) +
geom_boxplot()
#>>data manage
#sorting
dd <- arrange(dd, sience, socst) %>%
head(5)
#>>data manage
#sorting
dd <- arrange(dd, science, socst) %>%
head(5)
#>>data manage
#sorting
dd %>% arrange(dd, science, socst) %>%
head(5)
#>>data manage
#sorting
dd <- arrange(dd, science, socst) %>%
head(5)
dd
dd$science[dd$science == -99] <- NA
head(dd$science)
head(dd$science,10)
head(dd)
head(dd,10)
#>>data manage
#sorting
dd <- arrange(dd, science, socst)
head(dd,10)
dd$science[dd$science == -99] <- NA
head(dd$science,10)
head(dd,10)
dd<-read_csv("http://stats.idre.ucla.edu/stat/data/hsbraw.csv")
dd2<-read_csv("http://stats.idre.ucla.edu/stat/data/hsbraw.csv")
#data exploration
dd<- read.csv("http://stats.idre.ucla.edu/stat/data/hsbraw.csv")
sum(c(1,2,NA), na.rm=TRUE)
install.packages("tseries")
install.packages("forecast")
install.packages("TTR")
library(tseries)
library(forecast)
library(TTR)
king <- scan("http://robjhyndman.com/tsdldata/misc/kings.dat", skip=3)
king.ts <- ts(king)
plot.ts(king.ts)
king.sma3 <- SMA(king.ts, n=3)
plot.ts(king.sma3)
king.sma8 <- SMA(king.ts, n=8)
plot.ts(king.sma8)
#ARIMA
#이전 자료가 비정상성을 띄기에 차분을 실시
king.ff1 <- diff(king.ts, diffrences=1)
plot.ts(king.ff1)
#ACF와 PACF를 통한 ARIMA모델 결정
#ACF
acf(king.ff1, lan.max=20)
#ACF와 PACF를 통한 ARIMA모델 결정
#ACF
acf(king.ff1, lag.max=20)
acf(king.ff1, lag.max=20, plot = FALSE)
#PACF
pacf(king.ff1, lag.max = 20)
pacf(king.ff1, lag.max = 20, plot = FALSE)
#적절한 ARIMA모델 찾기
auto.arima(king)
#forecast
king.arima<arima(king, order = c(0,1,1))
#forecast
king.arima<-arima(king, order = c(0,1,1))
king.for <- forecast(king.arima)
king.for
king.for <- forecast(king.arima, h=5)
king.for
library(MASS)
install.packages("MASS")
install.packages("MASS")
dis<-cmdscale(eurodist)
x<-dis[,1]
y<-dis[,2]
plot(x,y,type = "n",asp = 1,main = "Metric MDS")
test(x,y,rownames(loc),cex=0.7)
test(x,y,rownames(dis),cex=0.7)
text(x,y,rownames(loc),cex=0.7)
text(x,y,rownames(dis),cex=0.7)
abline(v=0,h=0,lty=2,lwd=0.5)
#비계량MDS
swiss.x <- as.matrix(swiss[,-1])
swiss.dist <- dist(swiss.x)
plot(swiss.mds$points, type="n")
swiss.mds <- isoMDS(swiss.dist)
swiss.mds <- isoMDS(swiss.dist)
library(MASS)
swiss.dist <- dist(swiss.x)
swiss.mds <- isoMDS(swiss.dist)
plot(swiss.mds$points, type="n")
text(swiss.mds$points, labels = as.character(1:nrow(swiss.x)))
abline(v=0,h=0,lyy=2,lwd=0.5)
abline(v=0,h=0,lty=2,lwd=0.5)
abline(v=0,h=0,lty=2,lwd=0.5)
abline(v=0,h=0,lty=2,lwd=0.5)
abline(v=0,h=0,lty=2,lwd=0.5)
abline(v=0,h=0,lty=2,lwd=0.5)
text(swiss.mds$points, labels = as.character(1:nrow(swiss.x)))
#비계량MDS(sammon)
swiss.x <- as.matrix(swiss[,-1])
swiss.sammon <- sammon(dist(swiss.x))
plot(swiss.sammon$points, type = "n")
text(swiss.sammon$points, labels = as.character(1:nrow(swiss.x)))
abline(v=0,h=0,lty=2,lwd=0.5)
install.packages("datasets")
install.packages("datasets")
install.packages("datasets")
install.packages("datasets")
install.packages("datasets")
library(datasets)
#4개 변수들 간의 산점도
data("USArrests")
pairs(USArrests, pannel=pannel.smooth, main="USArrests data")
pairs(USArrests, pannel=pannel.smooth, main="USArrests")
pairs(USArrests, panel=panel.smooth, main="USArrests")
pairs(USArrests, panel=panel.smooth, main="USArrests data")
#summary (1,2주성분 활용)
US.prin <- princomp(USArrests, cor=TRUE)
summary(US.prin)
screeplot(US.prin, npcs = 4, type = "lines")
#loading
loadings(US.prin)
#scores
US.prin$scores
#scores
head(5,US.prin$scores)
#scores
head(US.prin$scores,5)
#1,2주성분 행렬도
arrests.pca <- prcomp(USArrests,center = TRUE, scale. = TRUE)
biplot(arrests.pca,scale=0)
library(installr)
library(readxl)
library(tidyverse)
library(dplyr)
library(foreign)
library(ggplot2)
data_csv <- read.csv("http://stats.idre.ucla.edu/stat/data/hsbdemo.csv")
View(data)
#delim은 이상하게 나오니까 쓰지말자(나중에 알고 쓰는걸로)
data_tab <- read_delim("http://stats.idre.ucla.edu/stat/data/hsb2.txt", delim="/t")
View(data_tab)
data_tab
#tible
md <- tibble(height=c(58,33,92), weight=c(198,298,136))
md
class(md)
class(as.data.frame(md))
as.data.frame(md)
#sas,spss파일 부르기
require(haven)
daspaa<-read.spss("http://stats.idre.ucla.edu/stat/data/hsb2.sav")
download.file("http://stats.idre.ucla.edu/stat/data/hsb2.xls","prac_lec.xls",mode = "wb")
daxls <- read_excel("prac_lec.xls")
write.csv(data_csv, file="C://Users//user//Desktop//R특강//11//data_csv.csv")
write.dta(data, file="C://Users//user//Desktop//R특강//11//dacsv.csv")
#data exploration
dd<- read.csv("http://stats.idre.ucla.edu/stat/data/hsbraw.csv")
View(dd)
mean(dd$read)
median(dd$read)
var(dd$read)
ggplot(data=dd, aes(x=write, y=read)) +geom_point()
ggplot(data=dd, aes(x=write)) +geom_histogram(bins=10)
ggplot(dd[dd$math>mean(dd$math),],aes(x=write)) +geom_histogram(bins=10)
ggplot(dd, aes(x=1, y=science)) + geom_boxplot()
table(dd$female)
table(dd$ses)
#요인
str(dd$ses)
dd$ses <- factor(dd$ses, levels=c("low","middle","high"))
str(dd$ses)
levels(dd$ses)
dd$ses[1] == "low"
as.numeric(dd$ses[1]) == 1
dd$female <- factor(dd$female)
dd$prog <- factor(dd$prog)
levels(dd$prog)
table(dd$prog)
dd$prog <- factor(dd$prog, levels =  c("academic", "general", "vocation"))
str(dd$prog)
table(dd$prog)
View(dd)
dd$female <- factor(dd$female, level=c("female", "male"))
str(dd$female)
ggplot(dd, aes(x=ses)) + geom_bar()
ggplot(dd, aes(x=prog)) + geom_bar()
#correlation(상관관계)
cor(dd$write, dd$read)
ggplot(dd, aes(x=read, y=write)) +
geom_point() +
geom_smooth()
scores <- dd[, c("read", "write")]
scores
cor(scores)
#그룹별 평균산출
by_fe <- group_by(dd, female)
class(by_fe)
summarize(by_fe, mean(math), var(math))
summarize(dd, mean(math), var(math))
ggplot(dd, aes(x=female, y=math)) +
geom_boxplot()
ggplot(by_fe, aes(x=math)) +
geom_density()
ggplot(dd, aes(x=ses, fill=prog)) +
geom_bar(position = "dodge")
ggplot(dd, aes(x=read, y=write, color=prog)) +
geom_point()+
geom_smooth()
ggplot(dd, aes(x=ses, fill=prog)) +
geom_bar(position = "dodge") + #분리
facet_wrap(~female) #facet_wrap은 성별
ggplot(dd, aes(x=awards, fill=prog)) +
geom_density()
table(dd$awards)
summary(dd$awards)
by_se<-group_by(dd, prog)
summarize(by_se, max(math), IQR(math))
table(by_se$prog)
ggplot(by_se, aes(x=prog,y=math,fill=prog)) +
geom_boxplot()
#>>data manage
#sorting
dd <- arrange(dd, science, socst)
dd
dd$science[dd$science == -99] <- NA
head(dd$science,10)
head(dd,10)
dd2<-read_csv("http://stats.idre.ucla.edu/stat/data/hsbraw.csv")
sum(c(1,2,NA), na.rm=TRUE)
data_csv <- read.csv("http://stats.idre.ucla.edu/stat/data/hsbdemo.csv")
View(data)
#delim은 이상하게 나오니까 쓰지말자(나중에 알고 쓰는걸로)
data_tab <- read_delim("http://stats.idre.ucla.edu/stat/data/hsb2.txt", delim="/t")
View(data_tab)
data_tab
#tible
md <- tibble(height=c(58,33,92), weight=c(198,298,136))
md
class(md)
class(as.data.frame(md))
as.data.frame(md)
#sas,spss파일 부르기
require(haven)
daspaa<-read.spss("http://stats.idre.ucla.edu/stat/data/hsb2.sav")
download.file("http://stats.idre.ucla.edu/stat/data/hsb2.xls","prac_lec.xls",mode = "wb")
daxls <- read_excel("prac_lec.xls")
write.csv(data_csv, file="C://Users//user//Desktop//R특강//11//data_csv.csv")
write.dta(data, file="C://Users//user//Desktop//R특강//11//dacsv.csv")
#data exploration
dd<- read.csv("http://stats.idre.ucla.edu/stat/data/hsbraw.csv")
View(dd)
mean(dd$read)
median(dd$read)
var(dd$read)
ggplot(data=dd, aes(x=write, y=read)) +geom_point()
ggplot(data=dd, aes(x=write)) +geom_histogram(bins=10)
ggplot(dd[dd$math>mean(dd$math),],aes(x=write)) +geom_histogram(bins=10)
ggplot(dd, aes(x=1, y=science)) + geom_boxplot()
table(dd$female)
table(dd$ses)
#요인
str(dd$ses)
dd$ses <- factor(dd$ses, levels=c("low","middle","high"))
str(dd$ses)
levels(dd$ses)
dd$ses[1] == "low"
as.numeric(dd$ses[1]) == 1
dd$female <- factor(dd$female)
dd$prog <- factor(dd$prog)
levels(dd$prog)
table(dd$prog)
dd$prog <- factor(dd$prog, levels =  c("academic", "general", "vocation"))
str(dd$prog)
table(dd$prog)
View(dd)
dd$female <- factor(dd$female, level=c("female", "male"))
str(dd$female)
ggplot(dd, aes(x=ses)) + geom_bar()
ggplot(dd, aes(x=prog)) + geom_bar()
#correlation(상관관계)
cor(dd$write, dd$read)
ggplot(dd, aes(x=read, y=write)) +
geom_point() +
geom_smooth()
scores <- dd[, c("read", "write")]
scores
cor(scores)
#그룹별 평균산출
by_fe <- group_by(dd, female)
class(by_fe)
summarize(by_fe, mean(math), var(math))
summarize(dd, mean(math), var(math))
ggplot(dd, aes(x=female, y=math)) +
geom_boxplot()
ggplot(by_fe, aes(x=math)) +
geom_density()
ggplot(dd, aes(x=ses, fill=prog)) +
geom_bar(position = "dodge")
ggplot(dd, aes(x=read, y=write, color=prog)) +
geom_point()+
geom_smooth()
ggplot(dd, aes(x=ses, fill=prog)) +
geom_bar(position = "dodge") + #분리
facet_wrap(~female) #facet_wrap은 성별
ggplot(dd, aes(x=awards, fill=prog)) +
geom_density()
table(dd$awards)
summary(dd$awards)
by_se<-group_by(dd, prog)
summarize(by_se, max(math), IQR(math))
table(by_se$prog)
ggplot(by_se, aes(x=prog,y=math,fill=prog)) +
geom_boxplot()
#>>data manage
#sorting
dd <- arrange(dd, science, socst)
dd
dd$science[dd$science == -99] <- NA
head(dd$science,10)
head(dd,10)
dd2<-read_csv("http://stats.idre.ucla.edu/stat/data/hsbraw.csv")
sum(c(1,2,NA), na.rm=TRUE)
#data exploration
dd<- read.csv("http://stats.idre.ucla.edu/stat/data/hsbraw.csv")
source('C:/Users/user/Desktop/R특강/11/3.R', encoding = 'UTF-8', echo=TRUE)
#data exploration
dd<- read.csv("http://stats.idre.ucla.edu/stat/data/hsbraw.csv")
dd$prog_short <- substr(d$prog, start = 1, stop = 3)
dd$prog_short <- substr(dd$prog, start = 1, stop = 3)
head(dd[x("prog", "prog_short")],n=5)
head(dd[c("prog", "prog_short")],n=5)
#grep
my_char <- c("here", "are", "some", "words", "to", "explore")
grep(pattern = "re", x=my_char)
grep("re", my_char, value = TRUE)
#data frame에 새 변수 추가
dd$logwrite <- log(dd$write)
colnames(dd)
ggplot(dd, aes(x=write)) + geom_density()
dd$z <- rep(0,300)
dd$z <- rep(0,100)
dd$z
str(dd$science)
dd<-mutate(dd,
logscience = log(science),
sciencerank = min_rank(science),
sciencegrade = cut(science,
breaks = c(0,55,67,89,31,55),
labels = c("F","B","A","C","B")),
zscience = scale(science))
dd<-mutate(dd,
logscience = log(science),
sciencerank = min_rank(science),
sciencegrade = cut(science,
breaks = c(0,35,45,55,65,80),
labels = c("F","D","C","B","A")),
zscience = scale(science))
ggplot(dd, aes(x=science)) + geom_density()
ggplot(dd, aes(x=zscience)) + geom_density()
ggplot(dd, aes(x=zscience)) + geom_density()
ggplot(dd, aes(x=zscience)) + geom_density()
ggplot(dd, aes(x=write)) + geom_density()
ggplot(dd, aes(x=zscience)) + geom_density()
max_read <- dd[dd$read==max(dd$read)]
max_read <- dd[dd$read==max(dd$read)]
max_read <- dd[dd$read==max(dd$read),]
max_read
dd_fil_ma <- dd[(dd$female="female"& dd$math>65 & dd$write >65 ),]
dd_fil_ma <- dd[(dd$female=="female"& dd$math>65 & dd$write >65 ),]
dd_fil_ma
dd_fil_ma <- filter(dd, (prog=="general"|prog=="academic")&math<50)
dd_fil_ma
dd_fil_m <- filter(dd, (prog=="general"|prog=="academic")&math<50)
dd_fil_m
head(dd_fil_m,3)
dd_fil_ma <- dd[(dd$female=="female"& dd$math>65 & dd$write >65 ),]
head(dd_fil_ma,3)
d_use <- select(dd, c(dd, id, female, read, write))
d_use <- select(c(dd, id, female, read, write))
d_use <- select(dd, id, female, read, write)
d_dro <- select(dd, -c(ses, prog,read))
c_use <- select(dd, -c(ses, prog,read))
c_use <- select(dd, ses, prog,read)
c_use <- select(dd, id,ses, prog,read)
c_drop <- select(dd, -c(ses,prog, read))
c_all <- cbind(c_use, c_drop)
head(c_all,5)
library(installr)
library(readxl)
library(tidyverse)
library(dplyr)
library(foreign)
library(ggplot2)
View(dd)
by-c <- group_by(dd,cid)
by_c <- group_by(dd,cid)
class_stats <- summarize(by_c, meamath=mean(math), memath=median(math))
head(class_stats,5)
dd_merge <- merge(dd, class_stats)
dd_merge
dd_inner <- inner_join(dd, class_stats)
dd_inner
dim(dd)
dim(dd_inner)
dim(dd_merge)
dd_cbind <- cbind(dd, class_stats)
dd_cbind
dim(dd_cbind)
View(dd_cbind)
View(dd_merge)
direc
direc <- table(names=c("Leo smith", "Karen smith",
"Andrey jones", "Dylan jones"),
phone=c("(323)555-5432", "(323)555-5421",
"(213)555-2154", "(213)555-2155"))
direc
direc$area_code <- substr(direc$phone,2,4)
direc$area_code <- substr(direc$phone,2,4)
direc <- data.frame(names=c("Leo smith", "Karen smith",
"Andrey jones", "Dylan jones"),
phone=c("(323)555-5432", "(323)555-5421",
"(213)555-2154", "(213)555-2155"))
direc$area_code <- substr(direc$phone,2,4)
direc
direc <- tibble(names=c("Leo smith", "Karen smith",
"Andrey jones", "Dylan jones"),
phone=c("(323)555-5432", "(323)555-5421",
"(213)555-2154", "(213)555-2155"))
direc$area_code <- substr(direc$phone,2,4)
direc
ser_num <- grep(direc$phone, 1,3)
ser_num
ser_num <- grep(direc$phone, "1","3")
ser_num
ser_num <- grep("1","3",direc$phone)
ser_num
ser_num <- grep("1,3",direc$phone)
ser_num
View(ser_num)
ser_num <- grep("13",direc$phone)
ser_num
View(ser_num)
library(ggplot2)
library(installr)
library(readxl)
library(tidyverse)
library(dplyr)
library(foreign)
library(ggplot2)
