top <- df_word %>%
arrange(desc(freq)) %>%
head(20)
top
install.packages("wordcloud")
nou <- extractNoun(tx)
library(wordcloud)
library(wordcloud)
library(RColorBrewer)
#워드클라우드 생성
pal <- brewer.pal(8, "Dark2")
set.seed(1234)
wordcloud(words = df_word$word,
freq = df_word$freq,
min.freq = 2,
max.freq = 200,
random.order = F,
rot.per = .1,
scale = c(4,0.3),
colors = pal)
wordcloud(words = df_word$word,
freq = df_word$freq,
min.freq = 2,
max.freq = 200,
random.order = F,
rot.per = .1,
scale = c(4,0.3),
colors = pal)
tx <- readLines("F://R//R//data//hiphop.txt")
head(tx)
tx <- str_replace_all(tx, "\\W", "")
nou <- extractNoun(tx)
wc <- table(unlist(nou))
df_word <- rename(df_word,
word =Var1,
freq = Freq)
df_word <- rename(df_word,
word =var1,
freq = Freq)
df_word <- rename(df_word,
word =Var1,
freq = Freq)
useNIADic()
tx <- readLines("F://R//R//data//hiphop.txt")
head(tx)
tx <- str_replace_all(tx, "\\W", "")
nou <- extractNoun(tx)
wc <- table(unlist(nou))
df_word <- as.data.frame(wc, stringsAsFactors = F)
df_word <- filter(df_word, nchar(word) >= 2)
df_word <- rename(df_word,
word =Var1,
freq = Freq)
df_word <- filter(df_word, nchar(word) >= 2)
#워드클라우드 생성
pal <- brewer.pal(8, "Dark2")
set.seed(1234)
wordcloud(words = df_word$word,
freq = df_word$freq,
min.freq = 2,
max.freq = 200,
random.order = F,
rot.per = .1,
scale = c(4,0.3),
colors = pal)
library(wordcloud)
wordcloud(words = df_word$word,
freq = df_word$freq,
min.freq = 2,
max.freq = 200,
random.order = F,
rot.per = .1,
scale = c(4,0.3),
colors = pal)
df_word <- rename(df_word,
word =Var1,
freq = Freq)
df_word <- rename(df_word,
word =Var1,
freq = Freq)
wordcloud(words = df_word$word,
freq = df_word$freq,
min.freq = 2,
max.freq = 20,
random.order = F,
rot.per = .1,
scale = c(4,0.3),
colors = pal)
nou <- extractNoun(tx)
wc <- table(unlist(nou))
df_word <- rename(df_word,
word =Var1,
freq = Freq)
nou <- extractNoun(tx)
wc <- table(unlist(nou))
df_word <- as.data.frame(wc, stringsAsFactors = F)
df_word <- rename(df_word,
word =Var1,
freq = Freq)
df_word <- filter(df_word, nchar(word) >= 2)
#워드클라우드 생성
pal <- brewer.pal(8, "Dark2")
set.seed(1234)
wordcloud(words = df_word$word,
freq = df_word$freq,
min.freq = 2,
max.freq = 20,
random.order = F,
rot.per = .1,
scale = c(4,0.3),
colors = pal)
wordcloud(words = df_word$word,
freq = df_word$freq,
min.freq = 2,
max.freq = 200,
random.order = F,
rot.per = .1,
scale = c(4,0.3),
colors = pal)
#워드클라우드 생성
pal <- brewer.pal(9, "Blues")[5:9]
#워드클라우드 생성
pal <- brewer.pal(9, "Blues")[5:9]
wordcloud(words = df_word$word,
freq = df_word$freq,
min.freq = 2,
max.freq = 200,
random.order = F,
rot.per = .1,
scale = c(4,0.3),
colors = pal)
tx <- readLines("C://Users//user//Desktop//총장님 취임사.txt")
tx <- readLines("C://Users//user//Desktop//총장님 취임사.txt")
tx <- readLines("C://Users//user//Desktop//총장님_취임사.txt")
head(tx)
tx <- str_replace_all(tx, "\\W", "")
nou <- extractNoun(tx)
wc <- table(unlist(nou))
df_word <- as.data.frame(wc, stringsAsFactors = F)
df_word <- rename(df_word,
word =Var1,
freq = Freq)
df_word <- filter(df_word, nchar(word) >= 2)
#워드클라우드 생성
pal <- brewer.pal(9, "Blues")[5:9]
set.seed(1234)
wordcloud(words = df_word$word,
freq = df_word$freq,
min.freq = 2,
max.freq = 200,
random.order = F,
rot.per = .1,
scale = c(4,0.3),
colors = pal)
wordcloud(words = df_word$word,
freq = df_word$freq,
min.freq = 2,
max.words  = 200,
random.order = F,
rot.per = .1,
scale = c(4,0.3),
colors = pal)
wordcloud(words = df_word$word,
freq = df_word$freq,
min.freq = 2,
max.words  = 200,
random.order = F,
rot.per = .1,
scale = c(4,0.3),
colors = pal)
wordcloud(words = df_word$word,
freq = df_word$freq,
min.freq = 2,
max.words  = 200,
random.order = F,
rot.per = .1,
scale = c(4,0.3),
colors = pal)
wordcloud(words = df_word$word,
freq = df_word$freq,
min.freq = 2,
max.words  = 200,
random.order = F,
rot.per = .1,
scale = c(4,0.3),
colors = pal)
wordcloud(words = df_word$word,
freq = df_word$freq,
min.freq = 2,
max.words  = 200,
random.order = F,
rot.per = .1,
scale = c(10,0.3),
colors = pal)
wordcloud(words = df_word$word,
freq = df_word$freq,
min.freq = 2,
max.words  = 200,
random.order = F,
rot.per = .1,
scale = c(4,0.3),
colors = pal)
tx <- str_replace_all(tx, "\\W", "")
tx <- readLines("C://Users//user//Desktop//총장님_취임사.txt")
tx <- readLines("C://Users//user//Desktop//pre.txt")
tx <- str_replace_all(tx, "\\W", "")
nou <- extractNoun(tx)
wc <- table(unlist(nou))
df_word <- as.data.frame(wc, stringsAsFactors = F)
df_word <- rename(df_word,
word =Var1,
freq = Freq)
df_word <- filter(df_word, nchar(word) >= 2)
#워드클라우드 생성
pal <- brewer.pal(9, "Blues")[5:9]
set.seed(1234)
wordcloud(words = df_word$word,
freq = df_word$freq,
min.freq = 2,
max.words  = 200,
random.order = F,
rot.per = .1,
scale = c(4,0.3),
colors = pal)
tx <- str_replace_all(tx, "\\W", " ")
nou <- extractNoun(tx)
wc <- table(unlist(nou))
df_word <- as.data.frame(wc, stringsAsFactors = F)
df_word <- rename(df_word,
word =Var1,
freq = Freq)
df_word <- filter(df_word, nchar(word) >= 2)
#워드클라우드 생성
pal <- brewer.pal(9, "Blues")[5:9]
set.seed(1234)
wordcloud(words = df_word$word,
freq = df_word$freq,
min.freq = 2,
max.words  = 200,
random.order = F,
rot.per = .1,
scale = c(4,0.3),
colors = pal)
tx <- str_replace_all(tx, "\\W", " ")
nou <- extractNoun(tx)
wc <- table(unlist(nou))
df_word <- as.data.frame(wc, stringsAsFactors = F)
df_word <- rename(df_word,
word =Var1,
freq = Freq)
df_word <- filter(df_word, nchar(word) >= 2)
top <- df_word %>%
arrange(desc(freq)) %>%
head(20)
top
#워드클라우드 생성
pal <- brewer.pal(9, "Blues")[5:9]
set.seed(1234)
wordcloud(words = df_word$word,
freq = df_word$freq,
min.freq = 2,
max.words  = 200,
random.order = F,
rot.per = .1,
scale = c(4,0.3),
colors = pal)
wordcloud(words = df_word$word,
freq = df_word$freq,
min.freq = 5,
max.words  = 200,
random.order = F,
rot.per = .1,
scale = c(4,0.3),
colors = pal)
wordcloud(words = df_word$word,
freq = df_word$freq,
min.freq = 10,
max.words  = 200,
random.order = F,
rot.per = .1,
scale = c(4,0.3),
colors = pal)
wordcloud(words = df_word$word,
freq = df_word$freq,
min.freq = 10,
max.words  = 200,
random.order = F,
rot.per = .1,
scale = c(4,0.3),
colors = pal)
library(KoNLP)
library(dplyr)
library(memoise)
library(Rcpp)
library(stringr)
library(wordcloud)
library(RColorBrewer)
nou <- extractNoun(tx)
wc <- table(unlist(nou))
df_word <- as.data.frame(wc, stringsAsFactors = F)
df_word <- rename(df_word,
word =Var1,
freq = Freq)
df_word <- filter(df_word, nchar(word) >= 2)
top <- df_word %>%
arrange(desc(freq)) %>%
head(20)
top
#워드클라우드 생성
pal <- brewer.pal(9, "Blues")[5:9]
set.seed(1234)
wordcloud(words = df_word$word,
freq = df_word$freq,
min.freq = 10,
max.words  = 200,
random.order = F,
rot.per = .1,
scale = c(4,0.3),
colors = pal)
#명사추출
extractNoun("대한민국의 영토는 한반도와 그 부속도서로 한다")
df_word <- filter(df_word, nchar(word) >= 4)
#워드클라우드 생성
pal <- brewer.pal(9, "Blues")[5:9]
set.seed(1234)
wordcloud(words = df_word$word,
freq = df_word$freq,
min.freq = 10,
max.words  = 200,
random.order = F,
rot.per = .1,
scale = c(4,0.3),
colors = pal)
wc <- table(unlist(nou))
df_word <- as.data.frame(wc, stringsAsFactors = F)
df_word <- rename(df_word,
word =Var1,
freq = Freq)
wordcloud(words = df_word$word,
freq = df_word$freq,
min.freq = 10,
max.words  = 200,
random.order = F,
rot.per = .1,
scale = c(4,0.3),
colors = pal)
library(installr)
library(tidyverse)
gettwd()
gettwd()
getwd()
library(installr)
library(tidyverse)
scores <- c(gu=23, kim=25, jeong=36)
scores[c("gu","kim")]
scores <- c(gu=23, kim=25, jeong=36, ju=39)
scores[c(FALSE,TRUE, TRUE, FALSE)]
score <30
scores <30
scores[scores<30]
li <- list(1.1,c(1L,3L,7L), C("abc","def"))
library(tidyverse)
li <- list(1.1,c(1L,3L,7L), C("abc","def"))
li <- list(3,c(경영과학, 알고리즘, 웹서비스), C(74,76,78))
li <- list(3, c(78,79,99), c("경영과학","알고리즘", "통계분석"))
li
li <- list(3,
score=c(78,79,99),
lec=c("경영과학","알고리즘", "통계분석"))
li <- list(3,
score=c(78,79,99),
lec=c("경영과학","알고리즘", "통계분석"),
mean=mean(lec))
li <- list(3,
score=c(78,79,99),
lec=c("경영과학","알고리즘", "통계분석"),
mean=mean(score))
li <- list(3,
score=c(78,79,99),
lec=c("경영과학","알고리즘", "통계분석"),
mean=mean(score))
li <- list(3,
score=c(78,79,99),
lec=c("경영과학","알고리즘", "통계분석"),
mean=score/3)
li <- list(3,
score=c(78,79,99),
lec=c("경영과학","알고리즘", "통계분석"))
li <- list(3,
score=c(78,79,99),
lec=c("경영과학","알고리즘", "통계분석"),
mean=mean(score))
li <- list(2,
score=c(78,79,99),
lec=c("경영과학","알고리즘", "통계분석"))
li <- list(2,
score=c(78,79,99),
lec=c("경영과학","알고리즘", "통계분석"),
ave=mean(score))
library(dplyr)
li <- list(2,
score=c(78,79,99),
lec=c("경영과학","알고리즘", "통계분석"),
ave=mean(score))
li <- list(2,
score=c(78,79),
lec=c("경영과학","알고리즘", "통계분석"),
)
li <- list(3,
score=c(78,79),
lec=c("경영과학","알고리즘", "통계분석"),
)
li <- list(3,
score=c(78,79,78),
lec=c("경영과학","알고리즘", "통계분석"),
)
li <- list(3,
score=c(78,79),
lec=c("경영과학","알고리즘", "통계분석")
)
li <- list(3,
score=c(78,79),
lec=c("경영과학","알고리즘", "통계분석"),
ave=mean(score)
)
mean(li$score)
li <- list(3,
score=c(78,79),
lec=c("경영과학","알고리즘", "통계분석"))
li
li <- list(3,
lec=c("경영과학","알고리즘", "통계분석"),
score=c(78,79))
li
mean(li$score)
li <- list(3,
lec_n=c("경영과학","알고리즘", "통계분석"),
score=c(78,79))
mary_info <- list(class=c("생산관리", "경영학", "공업회계","실험계획법"),
member=c("kim", "jang", "gu"),
gpa=95.5)
mary_info$fmember
mary_info$member
mary_info$member[3]
mary_info$class[2]
mary_info$class[1]
mary_info$class[1]
mary_info$class[4]
mary_info[[1]][[4]]
#matrix
a <- matrix(1:100, nrow = 20)
a
b <- matrix(1:100, nrow = 20, byrow = T)
b
View(b)
a[5,15]
a[15, 4]
b[15, 4]
b[,4]
b[4,]
#dataframe
c <- as.data.frame(mem=c("gu", "kim", "jeong", "kang", "lee"),
score=c(34,55,22,44,88))
#dataframe
c <- data.frame(mem=c("gu", "kim", "jeong", "kang", "lee"),
score=c(34,55,22,44,88))
c
c[3,2]
c[1:3, "score"]
c[,"score"]
c["mem",]
c[mem,]
c[,"mem"]
c["mem","score"]
c["mem",]
c[,"mem"]
c[2,2]
c[[2]][[2]]
c$score[2]
#column 변수 명 바꾸기
colnames(c)<-c("stu","num")
c
colnames(c)[1] <- c("mem")
c
dim(c)
str(c)
class(c)
dim(c)
colMeans(c)
#dataframe
c <- data.frame(mem=c(TRUE, TRUE, FALSE, FALSE, TRUE),
score=c(34,55,22,44,88))
colMeans(c)
modell <- lm(mem~num, data=c)
colnames(c)[1] <- c("mem")
c
modell <- lm(mem~score, data=c)
class(modell)
model1 <- lm(mem~score, data=c)
class(model1)
summary(model1)
summary(c)
v<-data.frame(letters=c("a", "b", "c"), numbers=c(1,2,3))
v
v[3]
v[[3]]
v[[1]][[3]]
v$letters[[3]]
v[1,3]
v[1,2]
v[3,1]
v[[1]][3]
